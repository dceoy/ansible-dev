---
- name: Clone rbenv
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
  with_items:
    - repo: 'https://github.com/rbenv/rbenv.git'
      dest: "{{ ansible_env.HOME }}/.rbenv"
    - repo: 'https://github.com/rbenv/ruby-build.git'
      dest: "{{ ansible_env.HOME }}/.rbenv/plugins/ruby-build"
  notify: Notify updates of Ruby via Slack

- name: Set variables
  set_fact:
    rbenv: "{{ ansible_env.HOME }}/.rbenv/bin/rbenv"
    rbenv_root: "{{ ansible_env.HOME }}/.rbenv"

- name: Fetch the latest version for 2
  shell: |
    {{ rbenv }} install --list | awk '$1 ~ /^2\.[0-9]+\.[0-9]+$/ { v=$1 } END{ print v }'
  register: rb_v

- name: Check if the latest version exists
  stat:
    path: "{{ rbenv_root }}/versions/{{ rb_v.stdout }}/bin/ruby"
  register: rb_x

- name: Install the latest version
  when: not rb_x.stat.exists
  shell: |
    {{ rbenv }} install {{ rb_v.stdout }}
  ignore_errors: true
  notify: Notify updates of Ruby via Slack

- name: Check if gem exists
  stat:
    path: "{{ rbenv_root }}/versions/{{ rb_v.stdout }}/bin/gem"
  register: gem_x

- name: Install and update packages
  when: gem_x.stat.exists
  gem:
    name: "{{ item }}"
    executable: "{{ gem_x.stat.path }}"
    state: latest
  with_items: "{{ gem_packages }}"
  ignore_errors: true
  notify: Notify updates of Ruby via Slack

- name: Set the global version
  when: gem_x.stat.exists
  lineinfile:
    path: "{{ rbenv_root }}/version"
    create: yes
    regexp: '^.*$'
    line: "{{ rb_v.stdout }}"
