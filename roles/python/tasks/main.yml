---
- name: Clone pyenv
  ansible.builtin.git:
    repo: https://github.com/yyuu/pyenv.git
    dest: "{{ ansible_env.HOME }}/.pyenv"
    force: yes
  notify: Notify updates of Python via Slack

- name: Set variables
  ansible.builtin.set_fact:
    pyenv: "{{ ansible_env.HOME }}/.pyenv/bin/pyenv"
    pyenv_root: "{{ ansible_env.HOME }}/.pyenv"
    base_requirements: "{{ lookup('file', 'requirements.txt').split('\n') }}"

- name: Fetch the latest version of Python
  ansible.builtin.shell:
    cmd: |
      set -euo pipefail
      {{ pyenv }} install --list \
        | awk '$1 ~ /^[0-9]+\.[0-9]+\.[0-9]+$/ { v=$1 } END { print v }'
    executable: /bin/bash
  changed_when: false
  register: py_v

- name: Check if the latest version is installed
  ansible.builtin.stat:
    path: "{{ pyenv_root }}/versions/{{ py_v.stdout }}/bin/python"
  register: py_x

- name: Install the latest version of Python
  when: not py_x.stat.exists
  ansible.builtin.shell:
    cmd: >
      install_pyenv.sh {{ py_v.stdout }}
    executable: /bin/bash
  ignore_errors: true
  notify: Notify updates of Python via Slack

- name: Check if pip exists
  ansible.builtin.stat:
    path: "{{ pyenv_root }}/versions/{{ py_v.stdout }}/bin/pip"
  register: pip_x

- name: Install and update base packages
  when:
    - pip_x.stat.exists
    - pip_packages is defined
  ansible.builtin.pip:
    name: "{{ base_requirements }}"
    executable: "{{ pip_x.stat.path }}"
    state: latest
  ignore_errors: true
  notify: Notify updates of Python via Slack

- name: Install and update Python packages
  when:
    - pip_x.stat.exists
    - pip_packages is defined
  ansible.builtin.pip:
    name: "{{ pip_packages }}"
    executable: "{{ pip_x.stat.path }}"
    state: latest
  ignore_errors: true
  notify: Notify updates of Python via Slack
