---
- name: Clone pyenv
  git:
    repo: 'https://github.com/yyuu/pyenv.git'
    dest: "{{ ansible_env.HOME }}/.pyenv"
  notify: Notify updates of Python via Slack

- name: Set variables
  set_fact:
    pyenv: "{{ ansible_env.HOME }}/.pyenv/bin/pyenv"
    pyenv_root: "{{ ansible_env.HOME }}/.pyenv"

- name: Fetch the latest versions
  shell: |
    {{ pyenv }} install --list | awk '$1 ~ /^{{ item }}[\.\-0-9]+$/ { v=$1 } END{ print v }'
  with_items:
    - 3
  # - anaconda
  # - 2
  changed_when: false
  register: py_v

- name: Check if the latest versions exist
  stat:
    path: "{{ pyenv_root }}/versions/{{ item.stdout }}/bin/python"
  with_items: "{{ py_v.results }}"
  register: py_x

- name: Set a list for new versions to install
  set_fact:
    new_v: |
      {% set o = [] %}
      {% for p in py_x.results if not p.stat.exists %}
      {%   set _ = o.append(p.item.stdout) %}
      {% endfor %}
      {{ o }}

- name: Install the latest versions
  when: new_v|length > 0
  shell: |
    {{ pyenv }} install {{ item }}
  with_items: "{{ new_v }}"
  ignore_errors: true
  notify: Notify updates of Python via Slack

- name: Check if pip exists
  stat:
    path: "{{ pyenv_root }}/versions/{{ item.stdout }}/bin/pip"
  with_items: "{{ py_v.results }}"
  register: pip_x

- name: Install and update base packages
  when:
    - ansible_architecture == 'x86_64'
    - pip_x.results[0].stat.exists
    - pip_packages is defined
    - pip_packages[3] is defined
  pip:
    name: "{{ item }}"
    executable: "{{ pip_x.results[0].stat.path }}"
    state: latest
  with_items:
    - docker-compose
    - flake8
    - pandas
    - pip
    - scipy
  ignore_errors: true
  notify: Notify updates of Python via Slack

- name: Install and update Python packages
  when:
    - ansible_architecture == 'x86_64'
    - pip_x.results[0].stat.exists
    - pip_packages is defined
    - pip_packages[3] is defined
  pip:
    name: "{{ item }}"
    executable: "{{ pip_x.results[0].stat.path }}"
    state: latest
  with_items: "{{ pip_packages[3] }}"
  ignore_errors: true
  notify: Notify updates of Python via Slack

- name: Set the global version for Python
  when: pip_x.results[0].stat.exists
  lineinfile:
    path: "{{ pyenv_root }}/version"
    create: yes
    regexp: '^.*$'
    line: "{{ py_v.results[0].stdout }}"
