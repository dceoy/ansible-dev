#!/usr/bin/env zsh

# ------------------------------
# General Settings
# ------------------------------

# Editor and Encoding
export EDITOR=vim
export LC_ALL='en_US.UTF-8'
export AUTOFEATURE=true

# Keybindings
bindkey -e  # Emacs-like keybindings
# Uncomment for Vi-like keybindings
# bindkey -v

# Zsh Options
setopt no_beep auto_cd auto_pushd correct magic_equal_subst prompt_subst notify equals

# Completion Settings
autoload -Uz compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
bindkey '^[[Z' reverse-menu-complete

setopt auto_list auto_menu list_packed list_types

# Glob Settings
setopt extended_glob
unsetopt caseglob

# ------------------------------
# History Settings
# ------------------------------

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

setopt bang_hist extended_history hist_ignore_dups share_history hist_reduce_blanks

# History Search with End Positioning
autoload -Uz history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end

bindkey '^P' history-beginning-search-backward-end
bindkey '^N' history-beginning-search-forward-end

# Function to display all history entries
function history-all { history -E 1 }

# ------------------------------
# Look And Feel Settings
# ------------------------------

# LS Colors (for `ls` and completion)
export LSCOLORS=Exfxcxdxbxegedabagacad  # macOS-specific format
export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
export CLICOLOR=true

# Prompt Colors and Styles
autoload -Uz colors && colors

PROMPT="%{$fg[cyan]%}%n%# %{$reset_color%}"
PROMPT2="%{$fg[cyan]%}%_> %{$reset_color%}"
RPROMPT="%{$fg[green]%}[%~]%{$reset_color%}"
SPROMPT="%{$fg[yellow]%}%r is correct? [Yes, No, Abort, Edit]:%{$reset_color%}"

if [[ ${UID} -eq 0 ]]; then  # Root user prompt styling
  PROMPT="%B%U${PROMPT}%u%b"
  PROMPT2="%B%U${PROMPT2}%u%b"
  RPROMPT="%B%U${RPROMPT}%u%b"
  SPROMPT="%B%U${SPROMPT}%u%b"
fi

[[ -n "${REMOTEHOST}${SSH_CONNECTION}" ]] && PROMPT="%{$fg[white]%}${HOST%%.*} ${PROMPT}"

# ------------------------------
# Miscellaneous Settings
# ------------------------------

setopt nonomatch  # Prevent errors for unmatched globs

case "${OSTYPE}" in
  darwin* )
    if [[ -d '/opt/homebrew/bin' ]]; then
      HB_PREFIX='/opt/homebrew'
    else
      HB_PREFIX='/usr/local'
    fi
    export PATH="${HB_PREFIX}/bin:${HB_PREFIX}/sbin:${HB_PREFIX}/opt/coreutils/libexec/gnubin:${HB_PREFIX}/opt/findutils/libexec/gnubin:${HB_PREFIX}/opt/gnu-sed/libexec/gnubin:${HB_PREFIX}/opt/gnu-tar/libexec/gnubin:${HB_PREFIX}/opt/grep/libexec/gnubin:${PATH}"
    export MANPATH="${HB_PREFIX}/opt/coreutils/libexec/gnuman:${HB_PREFIX}/opt/findutils/libexec/gnuman:${HB_PREFIX}/opt/gnu-sed/libexec/gnuman:${HB_PREFIX}/opt/gnu-tar/libexec/gnuman:${HB_PREFIX}/opt/grep/libexec/gnuman:${MANPATH}"
    alias tree='tree -N'
    alias brew-update-upgrade-cleanup='bash -xc "softwareupdate --install --all --agree-to-license --force && brew update && brew upgrade && brew cleanup"'
    function restart-app {
      for a in "${@}"; do
        killall "${a}" && open -a "${a}"
      done
    }
    GCSDK_DIR='/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk'
    if [[ -d "${GCSDK_DIR}" ]]; then
      source "${GCSDK_DIR}/path.zsh.inc"
      source "${GCSDK_DIR}/completion.zsh.inc"
    fi
    ;;
  linux* )
    :
    ;;
esac

alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias zgrep='zgrep --color=auto'
alias v='vim'
alias vi='vi -u NONE --noplugin -N'
alias g='git'
alias l='ls -CF'
alias ll='ls -lF'
alias lla='ls -lA'
alias llh='ls -lh'
alias diff='colordiff -u'
alias d='docker'
alias dc='docker compose'
alias drmc='docker container ps -aq | xargs docker container rm'
alias drmi='docker image ls | awk "/<none>/ { print \$3 }" | xargs docker image rm'
alias rv='R --quiet --no-save --no-restore'
alias yaml2json='ruby -rjson -ryaml -e "print YAML.load(STDIN.read).to_json" <'
alias json2yaml='ruby -rjson -ryaml -e "print JSON.load(STDIN.read).to_yaml" <'

if [[ -d "${HOME}/.zfunc" ]]; then
  fpath+=~/.zfunc
  autoload -Uz compinit && compinit
fi
if [[ -d "${HOME}/.rbenv" ]]; then
  export PATH="${HOME}/.rbenv/shims:${HOME}/.rbenv/bin:${PATH}"
  eval "$(rbenv init -)"
fi
if [[ -d "${HOME}/.pyenv" ]]; then
  export PATH="${HOME}/.pyenv/shims:${HOME}/.pyenv/bin:${PATH}"
  eval "$(pyenv init -)"
fi
[[ -n "${UID}" ]] || export UID="$(id -u)"
[[ -n "${GID}" ]] || export GID="$(id -g)"
export R_LIBS_USER="${HOME}/.clir/r/library"
export GOPATH="${HOME}/.go"
export PATH="${HOME}/.vim/bin:${GOPATH}/bin:${HOME}/.clir/bin:${HOME}/.local/bin:${PATH}"
export PYTHONDONTWRITEBYTECODE=true
export PYTHONBUFFERED=true
export PYTHONIOENCODING=utf-8
export PIP_NO_CACHE_DIR=true
export PIP_DISABLE_PIP_VERSION_CHECK=true

### Git ###
autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '%b '
zstyle ':vcs_info:*' actionformats '%b|%a '
function precmd {
  psvar=()
  LANG=en_US.UTF-8 vcs_info
  if [[ -n "${vcs_info_msg_0_}" ]]; then
    psvar[1]="${vcs_info_msg_0_}"
  fi
}
RPROMPT="%1(v|%F{green}%1v%f|)${RPROMPT}"
