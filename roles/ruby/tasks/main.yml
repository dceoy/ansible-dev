---
- name: Clone rbenv
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    force: yes
  loop:
    - repo: https://github.com/rbenv/rbenv.git
      dest: "{{ ansible_env.HOME }}/.rbenv"
    - repo: https://github.com/rbenv/ruby-build.git
      dest: "{{ ansible_env.HOME }}/.rbenv/plugins/ruby-build"
  notify: Notify updates of Ruby via Slack

- name: Set variables
  ansible.builtin.set_fact:
    rbenv: "{{ ansible_env.HOME }}/.rbenv/bin/rbenv"
    rbenv_root: "{{ ansible_env.HOME }}/.rbenv"
    n_versions_to_install: 1

- name: Fetch the latest version of Ruby
  ansible.builtin.script:
    cmd: >
      install_rbenv.sh --print-stable-versions {{ n_versions_to_install }}
    executable: /bin/bash
  changed_when: false
  register: rb_v

- name: Check if the latest version is installed
  ansible.builtin.stat:
    path: "{{ rbenv_root }}/versions/{{ item }}/bin/ruby"
  loop: "{{ rb_v.stdout_lines }}"
  register: rb_x

- name: Set a list for new versions to install
  set_fact:
    new_v: |
      {% set o = [] %}
      {% for p in rb_x.results if not p.stat.exists %}
      {%   set _ = o.append(p.item.stdout) %}
      {% endfor %}
      {{ o }}

- name: Install the latest version of Ruby
  when:
    - new_v|length > 0
  ansible.builtin.script:
    cmd: >
      install_rbenv.sh {{ new_v[0] }}
    executable: /bin/bash
  notify: Notify updates of Ruby via Slack

- name: Install and update Ruby packages
  when:
    - gem_packages is defined
  ansible.builtin.gem:
    name: "{{ item }}"
    executable: "{{ rbenv_root }}/versions/{{ new_v[0] }}/bin/gem"
    state: latest
  loop: "{{ gem_packages }}"
  ignore_errors: true
  notify: Notify updates of Ruby via Slack
