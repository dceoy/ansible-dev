---
- name: Clone rbenv
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    force: yes
  loop:
    - repo: https://github.com/rbenv/rbenv.git
      dest: "{{ ansible_env.HOME }}/.rbenv"
    - repo: https://github.com/rbenv/ruby-build.git
      dest: "{{ ansible_env.HOME }}/.rbenv/plugins/ruby-build"
  notify: Notify updates of Ruby via Slack

- name: Set variables
  ansible.builtin.set_fact:
    rbenv: "{{ ansible_env.HOME }}/.rbenv/bin/rbenv"
    rbenv_root: "{{ ansible_env.HOME }}/.rbenv"

- name: Fetch the latest version of Ruby
  ansible.builtin.shell:
    cmd: |
      set -euo pipefail
      {{ rbenv }} install --list \
        | awk '$1 ~ /^[0-9]+\.[0-9]+\.[0-9]+$/ { v=$1 } END { print v }'
  changed_when: false
  register: rb_v

- name: Check if the latest version exists
  ansible.builtin.stat:
    path: "{{ rbenv_root }}/versions/{{ rb_v.stdout }}/bin/ruby"
  register: rb_x

- name: Install the latest version of Ruby
  when: not rb_x.stat.exists
  ansible.builtin.shell:
    cmd: >
      install_rbenv.sh {{ rb_v.stdout }}
    executable: /bin/bash
  ignore_errors: true
  notify: Notify updates of Ruby via Slack

- name: Check if gem exists
  ansible.builtin.stat:
    path: "{{ rbenv_root }}/versions/{{ rb_v.stdout }}/bin/gem"
  register: gem_x

- name: Install and update Ruby packages
  when:
    - gem_x.stat.exists
    - gem_packages is defined
  ansible.builtin.gem:
    name: "{{ item }}"
    executable: "{{ gem_x.stat.path }}"
    state: latest
  loop: "{{ gem_packages }}"
  ignore_errors: true
  notify: Notify updates of Ruby via Slack
